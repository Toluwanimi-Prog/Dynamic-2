library(readxl)
library(tidyr)
library(ggplot2)
file_path <- "C:/Users/tolu/Onedrive/Desktop/Dynamic 2/Db_finalMain/table_03_01_072623.xlsx"
dataset <- read_excel(file_path, sheet = 4)
file_path <- "C:/Users/tolu/OneDrive/Desktop/Dynamic 2/Db_finalMain/table_03_01_072623.xlsx"
dataset <- read_excel(file_path, sheet = 4)
file_path <- "C:/Users/toluf/OneDrive/Desktop/Dynamic 2/Db_finalMain/table_03_01_072623.xlsx"
data <- read_excel(file_path, sheet = 4)
dataset
summary(dataset)
duplicated_rows <- dataset[duplicated(dataset), ]
# changing col names
clean_names <- c(
"Year",
"Total_GDP",
"Transport_GDP_Total",
"Air",
"Rail",
"Water",
"Truck",
"Transit",
"Pipeline",
"Other",
"Warehousing",
"Percent_GDP",
"Transport_Services",
"Air_Pct",
"Rail_Pct",
"Water_Pct",
"Truck_Pct",
"Transit_Pct",
"Pipeline_Pct",
"Other_Pct",
"Warehousing_Pct",
"Pct_Transport_GDP",
"Air_Share",
"Rail_Share",
"Water_Share",
"Truck_Share",
"Transit_Share",
"Pipeline_Share",
"Other_Share",
"Warehousing_Share"
)
# Assign new column names
colnames(dataset) <- clean_names
# Redoing col 1, rows 26:30
dataset[26, 1] <- "2017"
dataset[27, 1] <- "2018"
dataset[28, 1] <- "2019"
dataset[29, 1] <- "2020"
dataset[30, 1] <- "2021"
# Select relevant columns and convert to long format
transport_long <- dataset %>%
select(Year, Air, Rail, Water, Truck, Transit, Pipeline, Other, Warehousing) %>%
pivot_longer(cols = -Year,
names_to = "Sector",
values_to = "GDP")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
file_path <- "C:/Users/toluf/OneDrive/Desktop/Dynamic 2/Db_finalMain/table_03_01_072623.xlsx"
data <- read_excel(file_path, sheet = 4)
summary(dataset)
duplicated_rows <- dataset[duplicated(dataset), ]
# changing col names
clean_names <- c(
"Year",
"Total_GDP",
"Transport_GDP_Total",
"Air",
"Rail",
"Water",
"Truck",
"Transit",
"Pipeline",
"Other",
"Warehousing",
"Percent_GDP",
"Transport_Services",
"Air_Pct",
"Rail_Pct",
"Water_Pct",
"Truck_Pct",
"Transit_Pct",
"Pipeline_Pct",
"Other_Pct",
"Warehousing_Pct",
"Pct_Transport_GDP",
"Air_Share",
"Rail_Share",
"Water_Share",
"Truck_Share",
"Transit_Share",
"Pipeline_Share",
"Other_Share",
"Warehousing_Share"
)
# Assign new column names
colnames(dataset) <- clean_names
# Redoing col 1, rows 26:30
dataset[26, 1] <- "2017"
dataset[27, 1] <- "2018"
dataset[28, 1] <- "2019"
dataset[29, 1] <- "2020"
dataset[30, 1] <- "2021"
# Select relevant columns and convert to long format
transport_long <- dataset %>%
select(Year, Air, Rail, Water, Truck, Transit, Pipeline, Other, Warehousing) %>%
pivot_longer(cols = -Year,
names_to = "Sector",
values_to = "GDP")
# Create stacked bar chart for all years
# Convert Year to factor for first plot to ensure discrete x-axis
p1 <- ggplot(transport_long, aes(x = as.factor(Year), y = GDP, fill = Sector)) +
geom_bar(stat = "identity") +
labs(title = "For-hire Transportation GDP by Sector (1980-2022)",
x = "Year",
y = "GDP (Billions of Dollars)",
fill = "Transportation Sector") +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom") +
# Show fewer year labels to prevent overcrowding
scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 2)])
# Create filtered version showing only decade intervals
transport_long_filtered <- transport_long %>%
filter(Year %in% seq(1980, 2022, by = 10))
p2 <- ggplot(transport_long_filtered, aes(x = as.factor(Year), y = GDP, fill = Sector)) +
geom_bar(stat = "identity") +
labs(title = "For-hire Transportation GDP by Sector (Decade Intervals)",
x = "Year",
y = "GDP (Billions of Dollars)",
fill = "Transportation Sector") +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(axis.text.x = element_text(angle = 37),
plot.title = element_text(hjust = 0.3),
legend.position = "bottom")
# Display both plots
p1
p2
p3
# Select relevant columns and convert to long format
transport_long <- dataset %>%
select(Year, Air, Rail, Water, Truck, Transit, Pipeline, Other, Warehousing) %>%
pivot_longer(cols = -Year,
names_to = "Sector",
values_to = "GDP")
# Create stacked bar chart for all years
# Convert Year to factor for first plot to ensure discrete x-axis
p1 <- ggplot(transport_long, aes(x = as.factor(Year), y = GDP, fill = Sector)) +
geom_bar(stat = "identity") +
labs(title = "For-hire Transportation GDP by Sector (1980-2022)",
x = "Year",
y = "GDP (Billions of Dollars)",
fill = "Transportation Sector") +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom") +
# Show fewer year labels to prevent overcrowding
scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 2)])
# Create filtered version showing only decade intervals
transport_long_filtered <- transport_long %>%
filter(Year %in% seq(1980, 2022, by = 10))
p2 <- ggplot(transport_long_filtered, aes(x = as.factor(Year), y = GDP, fill = Sector)) +
geom_bar(stat = "identity") +
labs(title = "For-hire Transportation GDP by Sector (Decade Intervals)",
x = "Year",
y = "GDP (Billions of Dollars)",
fill = "Transportation Sector") +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(axis.text.x = element_text(angle = 37),
plot.title = element_text(hjust = 0.3),
legend.position = "bottom")
# Display both plots
p1
p2
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
file_path <- "C:/Users/toluf/OneDrive/Desktop/Dynamic 2/Db_finalMain/table_03_01_072623.xlsx"
dataset <- read_excel(file_path, sheet = 4)
dataset
summary(dataset)
duplicated_rows <- dataset[duplicated(dataset), ]
# changing col names
clean_names <- c(
"Year",
"Total_GDP",
"Transport_GDP_Total",
"Air",
"Rail",
"Water",
"Truck",
"Transit",
"Pipeline",
"Other",
"Warehousing",
"Percent_GDP",
"Transport_Services",
"Air_Pct",
"Rail_Pct",
"Water_Pct",
"Truck_Pct",
"Transit_Pct",
"Pipeline_Pct",
"Other_Pct",
"Warehousing_Pct",
"Pct_Transport_GDP",
"Air_Share",
"Rail_Share",
"Water_Share",
"Truck_Share",
"Transit_Share",
"Pipeline_Share",
"Other_Share",
"Warehousing_Share"
)
# Assign new column names
colnames(dataset) <- clean_names
# Redoing col 1, rows 26:30
dataset[26, 1] <- "2017"
dataset[27, 1] <- "2018"
dataset[28, 1] <- "2019"
dataset[29, 1] <- "2020"
dataset[30, 1] <- "2021"
# Select relevant columns and convert to long format
transport_long <- dataset %>%
select(Year, Air, Rail, Water, Truck, Transit, Pipeline, Other, Warehousing) %>%
pivot_longer(cols = -Year,
names_to = "Sector",
values_to = "GDP")
# Create stacked bar chart for all years
# Convert Year to factor for first plot to ensure discrete x-axis
p1 <- ggplot(transport_long, aes(x = as.factor(Year), y = GDP, fill = Sector)) +
geom_bar(stat = "identity") +
labs(title = "For-hire Transportation GDP by Sector (1980-2022)",
x = "Year",
y = "GDP (Billions of Dollars)",
fill = "Transportation Sector") +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom") +
# Show fewer year labels to prevent overcrowding
scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 2)])
# Create filtered version showing only decade intervals
transport_long_filtered <- transport_long %>%
filter(Year %in% seq(1980, 2022, by = 10))
p2 <- ggplot(transport_long_filtered, aes(x = as.factor(Year), y = GDP, fill = Sector)) +
geom_bar(stat = "identity") +
labs(title = "For-hire Transportation GDP by Sector (Decade Intervals)",
x = "Year",
y = "GDP (Billions of Dollars)",
fill = "Transportation Sector") +
theme_minimal() +
scale_fill_brewer(palette = "Set2") +
theme(axis.text.x = element_text(angle = 37),
plot.title = element_text(hjust = 0.3),
legend.position = "bottom")
# Display both plots
p1
p2
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
dataset
summary(dataset)
duplicated_rows <- dataset[duplicated(dataset), ]
# changing col names
clean_names <- c(
"Year",
"Total_GDP",
"Transport_GDP_Total",
"Air",
"Rail",
"Water",
"Truck",
"Transit",
"Pipeline",
"Other",
"Warehousing",
"Percent_GDP",
"Transport_Services",
"Air_Pct",
"Rail_Pct",
"Water_Pct",
"Truck_Pct",
"Transit_Pct",
"Pipeline_Pct",
"Other_Pct",
"Warehousing_Pct",
"Pct_Transport_GDP",
"Air_Share",
"Rail_Share",
"Water_Share",
"Truck_Share",
"Transit_Share",
"Pipeline_Share",
"Other_Share",
"Warehousing_Share"
)
# Assign new column names
colnames(dataset) <- clean_names
# Redoing col 1, rows 26:30
dataset[26, 1] <- "2017"
dataset[27, 1] <- "2018"
dataset[28, 1] <- "2019"
dataset[29, 1] <- "2020"
dataset[30, 1] <- "2021"
library(readxl)
library(ggplot2)
library(plotly)
library(ggpubr)
library(readxl)
mydata <- read_excel("C:/Users/toluf/OneDrive/Desktop/Dynamic 2/GDPDataSets.xlsx", sheet = "Sheet2")
str(mydata)
library(ggplot2)
library(plotly)
p <- ggplot(mydata, aes(x = Year)) +
geom_line(aes(y = `Air transportation`, color = "Air Transportation"), size = 1) +
geom_line(aes(y = `Rail transportation`, color = "Rail Transportation"), size = 1) +
geom_line(aes(y = `Water transportation`, color = "Water Transportation"), size = 1) +
geom_line(aes(y = `Truck transportation`, color = "Truck Transportation"), size = 1) +
geom_line(aes(y = `Transit and ground passenger transportation`, color = "Transit & Ground Passenger Transportation"), size = 1) +
geom_line(aes(y = `Pipeline transportation`, color = "Pipeline Transportation"), size = 1) +
geom_line(aes(y = `Other transportation and support activities`, color = "Other Transportation & Support Activities"), size = 1) +
geom_line(aes(y = `Warehousing and storage`, color = "Warehousing & Storage"), size = 1) +
labs(
title = "Overall GDP Trends in Transportation Sectors (1980â€“2022)",
x = "Year",
y = "GDP (billions of current dollars)",
color = "Sector"
) +
theme_minimal()
p_interactive <- ggplotly(p)
library(readxl)
library(ggplot2)
library(plotly)
library(ggpubr)
library(readxl)
mydata <- read_excel("C:/Users/toluf/OneDrive/Desktop/Dynamic 2/GDPDataSets.xlsx", sheet = "Sheet2")
str(mydata)
library(ggplot2)
library(plotly)
p <- ggplot(mydata, aes(x = Year)) +
geom_line(aes(y = `Air transportation`, color = "Air Transportation"), size = 1) +
geom_line(aes(y = `Rail transportation`, color = "Rail Transportation"), size = 1) +
geom_line(aes(y = `Water transportation`, color = "Water Transportation"), size = 1) +
geom_line(aes(y = `Truck transportation`, color = "Truck Transportation"), size = 1) +
geom_line(aes(y = `Transit and ground passenger transportation`, color = "Transit & Ground Passenger Transportation"), size = 1) +
geom_line(aes(y = `Pipeline transportation`, color = "Pipeline Transportation"), size = 1) +
geom_line(aes(y = `Other transportation and support activities`, color = "Other Transportation & Support Activities"), size = 1) +
geom_line(aes(y = `Warehousing and storage`, color = "Warehousing & Storage"), size = 1) +
labs(
title = "Overall GDP Trends in Transportation Sectors (1980â€“2022)",
x = "Year",
y = "GDP (billions of current dollars)",
color = "Sector"
) +
theme_minimal()
p_interactive <- ggplotly(p)
colnames(mydata)
colnames(mydata)
View(mydata)
colnames(mydata)
View(mydata)
row.names(mydata)
colnames(mydata)
View(mydata)
row.names(mydata)
library(tidyverse)
# Assuming 'mydata' is the name of your dataset
mydata_long <- mydata %>%
pivot_longer(
cols = starts_with("19") | starts_with("20"), # Columns from 1980 onward
names_to = "Year",
values_to = "GDP"
)
View(mydata)
colnames(mydata)
View(mydata)
row.names(mydata)
library(readxl)
library(ggplot2)
library(plotly)
library(ggpubr)
library(readxl)
mydata <- read_excel("C:/Users/toluf/OneDrive/Desktop/Dynamic 2/GDPDataSets.xlsx", sheet = "Sheet2")
str(mydata)
library(readxl)
library(ggplot2)
library(plotly)
library(ggpubr)
library(readxl)
mydata <- read_excel("C:/Users/toluf/OneDrive/Desktop/Dynamic 2/GDPDataSets.xlsx", sheet = "Sheet2")
str(mydata)
row.names(mydata)
colnames(mydata)
View(mydata)
row.names(mydata)
library(tidyverse)
# Adding the sector names manually based on the row order from your data
sector_names <- c(
"Air transportation",
"Rail transportation",
"Water transportation",
"Truck transportation",
"Transit and ground passenger transportation",
"Pipeline transportation",
"Other transportation and support activities",
"Warehousing and storage"
)
# Add a new column for sectors
mydata$Sector <- sector_names
# Reshape the data into a long format
mydata_long <- mydata %>%
pivot_longer(
cols = starts_with("19") | starts_with("20"), # Select columns from 1980 onwards
names_to = "Year",
values_to = "GDP"
)
library(ggplot2)
library(plotly)
p <- ggplot(mydata, aes(x = Year)) +
geom_line(aes(y = `Air transportation`, color = "Air Transportation"), size = 1) +
geom_line(aes(y = `Rail transportation`, color = "Rail Transportation"), size = 1) +
geom_line(aes(y = `Water transportation`, color = "Water Transportation"), size = 1) +
geom_line(aes(y = `Truck transportation`, color = "Truck Transportation"), size = 1) +
geom_line(aes(y = `Transit and ground passenger transportation`, color = "Transit & Ground Passenger Transportation"), size = 1) +
geom_line(aes(y = `Pipeline transportation`, color = "Pipeline Transportation"), size = 1) +
geom_line(aes(y = `Other transportation and support activities`, color = "Other Transportation & Support Activities"), size = 1) +
geom_line(aes(y = `Warehousing and storage`, color = "Warehousing & Storage"), size = 1) +
labs(
title = "Overall GDP Trends in Transportation Sectors (1980â€“2022)",
x = "Year",
y = "GDP (billions of current dollars)",
color = "Sector"
) +
theme_minimal()
p_interactive <- ggplotly(p)
# Load necessary libraries
library(ggplot2)
library(plotly)
library(reshape2)
# Transpose the data and convert row names to a column
mydata <- as.data.frame(t(mydata))
colnames(mydata) <- mydata[1, ]  # Set first row as column names
mydata <- mydata[-1, ]           # Remove the first row
# Convert 'Year' back to row names (assuming first column is now 'Year')
mydata$Year <- rownames(mydata)
rownames(mydata) <- NULL
# Reshape data into long format
mydata_long <- melt(mydata, id.vars = "Year", variable.name = "Sector", value.name = "GDP")
# Convert Year to numeric (if not already)
mydata_long$Year <- as.numeric(mydata_long$Year)
# Plot using ggplot2
p <- ggplot(mydata_long, aes(x = Year, y = GDP, color = Sector)) +
geom_line(size = 1) +
labs(
title = "Overall GDP Trends in Transportation Sectors (1980â€“2022)",
x = "Year",
y = "GDP (billions of current dollars)",
color = "Sector"
) +
theme_minimal()
# Make the plot interactive
p_interactive <- ggplotly(p)
p_interactive
library(ggplot2)
library(plotly)
p <- ggplot(mydata, aes(x = Year)) +
geom_line(aes(y = `Air transportation`, color = "Air Transportation"), size = 1) +
geom_line(aes(y = `Rail transportation`, color = "Rail Transportation"), size = 1) +
geom_line(aes(y = `Water transportation`, color = "Water Transportation"), size = 1) +
geom_line(aes(y = `Truck transportation`, color = "Truck Transportation"), size = 1) +
geom_line(aes(y = `Transit and ground passenger transportation`, color = "Transit & Ground Passenger Transportation"), size = 1) +
geom_line(aes(y = `Pipeline transportation`, color = "Pipeline Transportation"), size = 1) +
geom_line(aes(y = `Other transportation and support activities`, color = "Other Transportation & Support Activities"), size = 1) +
geom_line(aes(y = `Warehousing and storage`, color = "Warehousing & Storage"), size = 1) +
labs(
title = "Overall GDP Trends in Transportation Sectors (1980â€“2022)",
x = "Year",
y = "GDP (billions of current dollars)",
color = "Sector"
) +
theme_minimal()
p_interactive <- ggplotly(p)
p_interactive
# Filter data for Great Recession period
recession_data <- mydata %>% filter(Year >= 2007 & Year <= 2012)
ggline(recession_data, x = "Year", y = "Air transportation",
add = "point",
color = "blue",
ylab = "GDP (billions of current dollars)",
xlab = "Year",
title = "Air Transportation GDP During Great Recession (2007â€“2012)")
